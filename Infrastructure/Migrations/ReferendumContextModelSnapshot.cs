// <auto-generated />
using System;
using BallotCast.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BallotCast.Infrastructure.Migrations
{
    [DbContext(typeof(ReferendumContext))]
    partial class ReferendumContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("BallotCast.Infrastructure.ParagraphEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReferendumId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReferendumId");

                    b.ToTable("Paragraphs");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.ReferendumEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ResultId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Referendums");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.ReferendumResultEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NoCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReferendumId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ResultDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("YesCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReferendumId")
                        .IsUnique();

                    b.ToTable("ReferendumResults");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.VoteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsYes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReferendumId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("VoteDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("VoterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReferendumId");

                    b.HasIndex("VoterId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.VoterEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Voters");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.VoterReferendumEntity", b =>
                {
                    b.Property<int>("VoterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReferendumId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanVote")
                        .HasColumnType("INTEGER");

                    b.HasKey("VoterId", "ReferendumId");

                    b.HasIndex("ReferendumId");

                    b.ToTable("VoterReferendums");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.ParagraphEntity", b =>
                {
                    b.HasOne("BallotCast.Infrastructure.ReferendumEntity", "Referendum")
                        .WithMany("Paragraphs")
                        .HasForeignKey("ReferendumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referendum");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.ReferendumResultEntity", b =>
                {
                    b.HasOne("BallotCast.Infrastructure.ReferendumEntity", "Referendum")
                        .WithOne("Result")
                        .HasForeignKey("BallotCast.Infrastructure.ReferendumResultEntity", "ReferendumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referendum");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.VoteEntity", b =>
                {
                    b.HasOne("BallotCast.Infrastructure.ReferendumEntity", "Referendum")
                        .WithMany("Votes")
                        .HasForeignKey("ReferendumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BallotCast.Infrastructure.VoterEntity", "Voter")
                        .WithMany("CastVotes")
                        .HasForeignKey("VoterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referendum");

                    b.Navigation("Voter");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.VoterReferendumEntity", b =>
                {
                    b.HasOne("BallotCast.Infrastructure.ReferendumEntity", "Referendum")
                        .WithMany("EligibleVoters")
                        .HasForeignKey("ReferendumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BallotCast.Infrastructure.VoterEntity", "Voter")
                        .WithMany("EligibleReferendums")
                        .HasForeignKey("VoterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Referendum");

                    b.Navigation("Voter");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.ReferendumEntity", b =>
                {
                    b.Navigation("EligibleVoters");

                    b.Navigation("Paragraphs");

                    b.Navigation("Result");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("BallotCast.Infrastructure.VoterEntity", b =>
                {
                    b.Navigation("CastVotes");

                    b.Navigation("EligibleReferendums");
                });
#pragma warning restore 612, 618
        }
    }
}
